imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    sitename: blogger
    session_path: "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    image_directory: "%kernel.root_dir%/../web/assets/images"

# Framework configuration
framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ["192.168.0.0/16", "172.16.0.0/12", "10.0.0.0/8"]
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.dbal
        save_path: "%session_path%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - "bootstrap_4_layout.html.twig"
    globals:
        sitename: "%sitename%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        path:     "%database_path%"
        memory:   "%database_memory%"
        charset:  UTF8
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
        naming_strategy: doctrine.orm.naming_strategy.underscore
        mappings:
            gedmo_translatable:
                type: annotation
                prefix: Gedmo\Translatable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                alias: GedmoTranslatable
                is_bundle: false
            gedmo_translator:
                type: annotation
                prefix: Gedmo\Translator\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                alias: GedmoTranslator
                is_bundle: false
            gedmo_loggable:
                type: annotation
                prefix: Gedmo\Loggable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                alias: GedmoLoggable
                is_bundle: false
            gedmo_tree:
                type: annotation
                prefix: Gedmo\Tree\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                alias: GedmoTree
                is_bundle: false

# Migrations for Doctrine
doctrine_migrations:
    dir_name: "%kernel.root_dir%/migrations"

# Friends of Symfony User config
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: noreply@example.com # You may want to change this
        sender_name: "%sitename%"

# Swiftmailer Configuration
swiftmailer:
    transport:  "%mailer_transport%"
    host:       "%mailer_host%"
    port:       "%mailer_port%"
    username:   "%mailer_user%"
    password:   "%mailer_password%"
    encryption: "%mailer_encryption%"
    auth_mode:  "%mailer_auth_mode%"
    spool:     { type: memory }

# Flysystem Configuration
oneup_flysystem:
    adapters:
        media: "%media.oneup_adapter_params%"
    filesystems:
        media:
            adapter: media

# Vich Configuration
vich_uploader:
    db_driver: orm
    storage: flysystem
    mappings: ~

# Doctrine Extensions Configuration
stof_doctrine_extensions:
    orm:
        default:
            timestampable: true

# Database url config
bravesheep_database_url:
    urls:
        default:
            url: "%database_url%"
            prefix: database_

# Mailer url config
bravesheep_mailer_url:
    urls:
        default:
            url: "%mailer_url%"
            prefix: mailer_

# Flysystem url config
bravesheep_flysystem_url:
    urls:
        default:
            url: "%media_url%"
            prefix: media

knp_paginator:
    page_range: 5                       # number of links showed in the pagination menu (e.g: you have 10 pages, a page_range of 3, on the 5th page you'll see links to page 4, 5, 6)
    default_options:
        page_name: page                 # page query parameter name
        sort_field_name: sort           # sort field query parameter name
        sort_direction_name: direction  # sort direction query parameter name
        distinct: true                  # ensure distinct results, useful when ORM queries are using GROUP BY statements
        filter_field_name: filterField  # filter field query parameter name
        filter_value_name: filterValue  # filter value query paameter name
    template:
        pagination: 'KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig'     # sliding pagination controls template
        sortable: 'KnpPaginatorBundle:Pagination:sortable_link.html.twig' # sort link template
        filtration: 'KnpPaginatorBundle:Pagination:filtration.html.twig'  # filters template

oneup_flysystem:
    adapters:
        my_adapter:
            local:
                directory: %kernel.root_dir%/cache

    filesystems:
        my_filesystem:
#            adapter: my_adapter
            adapter: Dropbox

            # optional - defines the default visibility of the filesystem: `public` or `private`(default)
            visibility: private

liip_imagine:
    resolvers:
        default:
            web_path: ~

    filter_sets:
        cache: ~

        # the name of the "filter set"
        my_thumb:

            # adjust the image quality to 75%
            quality: 100

            # list of transformations to apply (the "filters")
            filters:

                # create a thumbnail: set size to 120x90 and use the "outbound" mode
                # to crop the image when the size ratio of the input differs
                thumbnail: { size: [324, 195], mode: outbound}
#                thumbnail: {size: [50, 50] }

                # create a 2px black border: center the thumbnail on a black background
                # 4px larger to create a 2px border around the final image
#                background: { size: [124, 94], position: center, color: '#000000' }

